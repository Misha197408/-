{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "ddc445c7",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "from sklearn import preprocessing\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.preprocessing import MinMaxScaler\n",
    "from sklearn.metrics import r2_score\n",
    "from sklearn.metrics import mean_absolute_error\n",
    "\n",
    "Model_choice = pd.DataFrame(columns=['Model', 'MAE', 'R squared'])\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LinearRegression, LogisticRegressionCV\n",
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "from sklearn.neighbors import KNeighborsRegressor"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "70c9332e",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_excel(r\"C:\\Users\\55944\\Desktop\\888\\data_iqr_2.xlsx\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "0a931714",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(922, 14)"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "6903fd31",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>Соотношение матрица-наполнитель</th>\n",
       "      <th>Плотность, кг/м3</th>\n",
       "      <th>модуль упругости, ГПа</th>\n",
       "      <th>Количество отвердителя, м.%</th>\n",
       "      <th>Содержание эпоксидных групп,%_2</th>\n",
       "      <th>Температура вспышки, С_2</th>\n",
       "      <th>Поверхностная плотность, г/м2</th>\n",
       "      <th>Модуль упругости при растяжении, ГПа</th>\n",
       "      <th>Прочность при растяжении, МПа</th>\n",
       "      <th>Потребление смолы, г/м2</th>\n",
       "      <th>Угол нашивки</th>\n",
       "      <th>Шаг нашивки</th>\n",
       "      <th>Плотность нашивки</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1.857143</td>\n",
       "      <td>2030.0</td>\n",
       "      <td>738.736842</td>\n",
       "      <td>50.00</td>\n",
       "      <td>23.750000</td>\n",
       "      <td>284.615385</td>\n",
       "      <td>210.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>3000.0</td>\n",
       "      <td>220.0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>60.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3</td>\n",
       "      <td>1.857143</td>\n",
       "      <td>2030.0</td>\n",
       "      <td>738.736842</td>\n",
       "      <td>129.00</td>\n",
       "      <td>21.250000</td>\n",
       "      <td>300.000000</td>\n",
       "      <td>210.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>3000.0</td>\n",
       "      <td>220.0</td>\n",
       "      <td>0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>47.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4</td>\n",
       "      <td>2.771331</td>\n",
       "      <td>2030.0</td>\n",
       "      <td>753.000000</td>\n",
       "      <td>111.86</td>\n",
       "      <td>22.267857</td>\n",
       "      <td>284.615385</td>\n",
       "      <td>210.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>3000.0</td>\n",
       "      <td>220.0</td>\n",
       "      <td>0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>57.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5</td>\n",
       "      <td>2.767918</td>\n",
       "      <td>2000.0</td>\n",
       "      <td>748.000000</td>\n",
       "      <td>111.86</td>\n",
       "      <td>22.267857</td>\n",
       "      <td>284.615385</td>\n",
       "      <td>210.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>3000.0</td>\n",
       "      <td>220.0</td>\n",
       "      <td>0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>60.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>6</td>\n",
       "      <td>2.569620</td>\n",
       "      <td>1910.0</td>\n",
       "      <td>807.000000</td>\n",
       "      <td>111.86</td>\n",
       "      <td>22.267857</td>\n",
       "      <td>284.615385</td>\n",
       "      <td>210.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>3000.0</td>\n",
       "      <td>220.0</td>\n",
       "      <td>0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>70.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Unnamed: 0  Соотношение матрица-наполнитель  Плотность, кг/м3  \\\n",
       "0           1                         1.857143            2030.0   \n",
       "1           3                         1.857143            2030.0   \n",
       "2           4                         2.771331            2030.0   \n",
       "3           5                         2.767918            2000.0   \n",
       "4           6                         2.569620            1910.0   \n",
       "\n",
       "   модуль упругости, ГПа  Количество отвердителя, м.%  \\\n",
       "0             738.736842                        50.00   \n",
       "1             738.736842                       129.00   \n",
       "2             753.000000                       111.86   \n",
       "3             748.000000                       111.86   \n",
       "4             807.000000                       111.86   \n",
       "\n",
       "   Содержание эпоксидных групп,%_2  Температура вспышки, С_2  \\\n",
       "0                        23.750000                284.615385   \n",
       "1                        21.250000                300.000000   \n",
       "2                        22.267857                284.615385   \n",
       "3                        22.267857                284.615385   \n",
       "4                        22.267857                284.615385   \n",
       "\n",
       "   Поверхностная плотность, г/м2  Модуль упругости при растяжении, ГПа  \\\n",
       "0                          210.0                                  70.0   \n",
       "1                          210.0                                  70.0   \n",
       "2                          210.0                                  70.0   \n",
       "3                          210.0                                  70.0   \n",
       "4                          210.0                                  70.0   \n",
       "\n",
       "   Прочность при растяжении, МПа  Потребление смолы, г/м2  Угол нашивки  \\\n",
       "0                         3000.0                    220.0             0   \n",
       "1                         3000.0                    220.0             0   \n",
       "2                         3000.0                    220.0             0   \n",
       "3                         3000.0                    220.0             0   \n",
       "4                         3000.0                    220.0             0   \n",
       "\n",
       "   Шаг нашивки  Плотность нашивки  \n",
       "0          4.0               60.0  \n",
       "1          5.0               47.0  \n",
       "2          5.0               57.0  \n",
       "3          5.0               60.0  \n",
       "4          5.0               70.0  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "1446ab18",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Соотношение матрица-наполнитель</th>\n",
       "      <th>Плотность, кг/м3</th>\n",
       "      <th>модуль упругости, ГПа</th>\n",
       "      <th>Количество отвердителя, м.%</th>\n",
       "      <th>Содержание эпоксидных групп,%_2</th>\n",
       "      <th>Температура вспышки, С_2</th>\n",
       "      <th>Поверхностная плотность, г/м2</th>\n",
       "      <th>Модуль упругости при растяжении, ГПа</th>\n",
       "      <th>Прочность при растяжении, МПа</th>\n",
       "      <th>Потребление смолы, г/м2</th>\n",
       "      <th>Угол нашивки</th>\n",
       "      <th>Шаг нашивки</th>\n",
       "      <th>Плотность нашивки</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.857143</td>\n",
       "      <td>2030.0</td>\n",
       "      <td>738.736842</td>\n",
       "      <td>50.00</td>\n",
       "      <td>23.750000</td>\n",
       "      <td>284.615385</td>\n",
       "      <td>210.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>3000.0</td>\n",
       "      <td>220.0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>60.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.857143</td>\n",
       "      <td>2030.0</td>\n",
       "      <td>738.736842</td>\n",
       "      <td>129.00</td>\n",
       "      <td>21.250000</td>\n",
       "      <td>300.000000</td>\n",
       "      <td>210.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>3000.0</td>\n",
       "      <td>220.0</td>\n",
       "      <td>0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>47.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2.771331</td>\n",
       "      <td>2030.0</td>\n",
       "      <td>753.000000</td>\n",
       "      <td>111.86</td>\n",
       "      <td>22.267857</td>\n",
       "      <td>284.615385</td>\n",
       "      <td>210.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>3000.0</td>\n",
       "      <td>220.0</td>\n",
       "      <td>0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>57.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2.767918</td>\n",
       "      <td>2000.0</td>\n",
       "      <td>748.000000</td>\n",
       "      <td>111.86</td>\n",
       "      <td>22.267857</td>\n",
       "      <td>284.615385</td>\n",
       "      <td>210.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>3000.0</td>\n",
       "      <td>220.0</td>\n",
       "      <td>0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>60.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2.569620</td>\n",
       "      <td>1910.0</td>\n",
       "      <td>807.000000</td>\n",
       "      <td>111.86</td>\n",
       "      <td>22.267857</td>\n",
       "      <td>284.615385</td>\n",
       "      <td>210.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>3000.0</td>\n",
       "      <td>220.0</td>\n",
       "      <td>0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>70.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Соотношение матрица-наполнитель  Плотность, кг/м3  модуль упругости, ГПа  \\\n",
       "0                         1.857143            2030.0             738.736842   \n",
       "1                         1.857143            2030.0             738.736842   \n",
       "2                         2.771331            2030.0             753.000000   \n",
       "3                         2.767918            2000.0             748.000000   \n",
       "4                         2.569620            1910.0             807.000000   \n",
       "\n",
       "   Количество отвердителя, м.%  Содержание эпоксидных групп,%_2  \\\n",
       "0                        50.00                        23.750000   \n",
       "1                       129.00                        21.250000   \n",
       "2                       111.86                        22.267857   \n",
       "3                       111.86                        22.267857   \n",
       "4                       111.86                        22.267857   \n",
       "\n",
       "   Температура вспышки, С_2  Поверхностная плотность, г/м2  \\\n",
       "0                284.615385                          210.0   \n",
       "1                300.000000                          210.0   \n",
       "2                284.615385                          210.0   \n",
       "3                284.615385                          210.0   \n",
       "4                284.615385                          210.0   \n",
       "\n",
       "   Модуль упругости при растяжении, ГПа  Прочность при растяжении, МПа  \\\n",
       "0                                  70.0                         3000.0   \n",
       "1                                  70.0                         3000.0   \n",
       "2                                  70.0                         3000.0   \n",
       "3                                  70.0                         3000.0   \n",
       "4                                  70.0                         3000.0   \n",
       "\n",
       "   Потребление смолы, г/м2  Угол нашивки  Шаг нашивки  Плотность нашивки  \n",
       "0                    220.0             0          4.0               60.0  \n",
       "1                    220.0             0          5.0               47.0  \n",
       "2                    220.0             0          5.0               57.0  \n",
       "3                    220.0             0          5.0               60.0  \n",
       "4                    220.0             0          5.0               70.0  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.drop(['Unnamed: 0'], axis=1, inplace=True)\n",
    "df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "004f3b2a",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import Normalizer, LabelEncoder,  StandardScaler"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "7ff37a81",
   "metadata": {},
   "outputs": [],
   "source": [
    "norm = Normalizer()\n",
    "df_norm = pd.DataFrame(norm.fit_transform(df), columns=df.columns, index=df.index)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "a71b77f9",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Соотношение матрица-наполнитель</th>\n",
       "      <th>Плотность, кг/м3</th>\n",
       "      <th>модуль упругости, ГПа</th>\n",
       "      <th>Количество отвердителя, м.%</th>\n",
       "      <th>Содержание эпоксидных групп,%_2</th>\n",
       "      <th>Температура вспышки, С_2</th>\n",
       "      <th>Поверхностная плотность, г/м2</th>\n",
       "      <th>Модуль упругости при растяжении, ГПа</th>\n",
       "      <th>Прочность при растяжении, МПа</th>\n",
       "      <th>Потребление смолы, г/м2</th>\n",
       "      <th>Угол нашивки</th>\n",
       "      <th>Шаг нашивки</th>\n",
       "      <th>Плотность нашивки</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>922.000000</td>\n",
       "      <td>922.000000</td>\n",
       "      <td>922.000000</td>\n",
       "      <td>922.000000</td>\n",
       "      <td>922.000000</td>\n",
       "      <td>922.000000</td>\n",
       "      <td>922.000000</td>\n",
       "      <td>922.000000</td>\n",
       "      <td>922.000000</td>\n",
       "      <td>922.000000</td>\n",
       "      <td>922.000000</td>\n",
       "      <td>922.000000</td>\n",
       "      <td>922.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.000885</td>\n",
       "      <td>0.597049</td>\n",
       "      <td>0.220075</td>\n",
       "      <td>0.033657</td>\n",
       "      <td>0.006717</td>\n",
       "      <td>0.086572</td>\n",
       "      <td>0.144885</td>\n",
       "      <td>0.022174</td>\n",
       "      <td>0.731093</td>\n",
       "      <td>0.065909</td>\n",
       "      <td>0.000155</td>\n",
       "      <td>0.002101</td>\n",
       "      <td>0.017401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.000286</td>\n",
       "      <td>0.064504</td>\n",
       "      <td>0.095713</td>\n",
       "      <td>0.008973</td>\n",
       "      <td>0.001016</td>\n",
       "      <td>0.015045</td>\n",
       "      <td>0.083872</td>\n",
       "      <td>0.002485</td>\n",
       "      <td>0.069235</td>\n",
       "      <td>0.018509</td>\n",
       "      <td>0.000153</td>\n",
       "      <td>0.000808</td>\n",
       "      <td>0.003795</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000163</td>\n",
       "      <td>0.444650</td>\n",
       "      <td>0.000709</td>\n",
       "      <td>0.011339</td>\n",
       "      <td>0.004113</td>\n",
       "      <td>0.049402</td>\n",
       "      <td>0.000230</td>\n",
       "      <td>0.016108</td>\n",
       "      <td>0.463136</td>\n",
       "      <td>0.021630</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000011</td>\n",
       "      <td>0.007195</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.000685</td>\n",
       "      <td>0.552643</td>\n",
       "      <td>0.150901</td>\n",
       "      <td>0.027607</td>\n",
       "      <td>0.005990</td>\n",
       "      <td>0.076193</td>\n",
       "      <td>0.080748</td>\n",
       "      <td>0.020407</td>\n",
       "      <td>0.688177</td>\n",
       "      <td>0.052457</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.001543</td>\n",
       "      <td>0.014860</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.000872</td>\n",
       "      <td>0.592130</td>\n",
       "      <td>0.219805</td>\n",
       "      <td>0.033559</td>\n",
       "      <td>0.006654</td>\n",
       "      <td>0.085003</td>\n",
       "      <td>0.140105</td>\n",
       "      <td>0.021973</td>\n",
       "      <td>0.740666</td>\n",
       "      <td>0.065577</td>\n",
       "      <td>0.000244</td>\n",
       "      <td>0.002053</td>\n",
       "      <td>0.017293</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.001068</td>\n",
       "      <td>0.640228</td>\n",
       "      <td>0.289231</td>\n",
       "      <td>0.039565</td>\n",
       "      <td>0.007346</td>\n",
       "      <td>0.096585</td>\n",
       "      <td>0.204309</td>\n",
       "      <td>0.023759</td>\n",
       "      <td>0.780691</td>\n",
       "      <td>0.077899</td>\n",
       "      <td>0.000301</td>\n",
       "      <td>0.002630</td>\n",
       "      <td>0.019756</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>0.001803</td>\n",
       "      <td>0.824241</td>\n",
       "      <td>0.525102</td>\n",
       "      <td>0.062919</td>\n",
       "      <td>0.010887</td>\n",
       "      <td>0.147961</td>\n",
       "      <td>0.414371</td>\n",
       "      <td>0.030620</td>\n",
       "      <td>0.877580</td>\n",
       "      <td>0.122973</td>\n",
       "      <td>0.000419</td>\n",
       "      <td>0.004519</td>\n",
       "      <td>0.030927</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Соотношение матрица-наполнитель  Плотность, кг/м3  \\\n",
       "count                       922.000000        922.000000   \n",
       "mean                          0.000885          0.597049   \n",
       "std                           0.000286          0.064504   \n",
       "min                           0.000163          0.444650   \n",
       "25%                           0.000685          0.552643   \n",
       "50%                           0.000872          0.592130   \n",
       "75%                           0.001068          0.640228   \n",
       "max                           0.001803          0.824241   \n",
       "\n",
       "       модуль упругости, ГПа  Количество отвердителя, м.%  \\\n",
       "count             922.000000                   922.000000   \n",
       "mean                0.220075                     0.033657   \n",
       "std                 0.095713                     0.008973   \n",
       "min                 0.000709                     0.011339   \n",
       "25%                 0.150901                     0.027607   \n",
       "50%                 0.219805                     0.033559   \n",
       "75%                 0.289231                     0.039565   \n",
       "max                 0.525102                     0.062919   \n",
       "\n",
       "       Содержание эпоксидных групп,%_2  Температура вспышки, С_2  \\\n",
       "count                       922.000000                922.000000   \n",
       "mean                          0.006717                  0.086572   \n",
       "std                           0.001016                  0.015045   \n",
       "min                           0.004113                  0.049402   \n",
       "25%                           0.005990                  0.076193   \n",
       "50%                           0.006654                  0.085003   \n",
       "75%                           0.007346                  0.096585   \n",
       "max                           0.010887                  0.147961   \n",
       "\n",
       "       Поверхностная плотность, г/м2  Модуль упругости при растяжении, ГПа  \\\n",
       "count                     922.000000                            922.000000   \n",
       "mean                        0.144885                              0.022174   \n",
       "std                         0.083872                              0.002485   \n",
       "min                         0.000230                              0.016108   \n",
       "25%                         0.080748                              0.020407   \n",
       "50%                         0.140105                              0.021973   \n",
       "75%                         0.204309                              0.023759   \n",
       "max                         0.414371                              0.030620   \n",
       "\n",
       "       Прочность при растяжении, МПа  Потребление смолы, г/м2  Угол нашивки  \\\n",
       "count                     922.000000               922.000000    922.000000   \n",
       "mean                        0.731093                 0.065909      0.000155   \n",
       "std                         0.069235                 0.018509      0.000153   \n",
       "min                         0.463136                 0.021630      0.000000   \n",
       "25%                         0.688177                 0.052457      0.000000   \n",
       "50%                         0.740666                 0.065577      0.000244   \n",
       "75%                         0.780691                 0.077899      0.000301   \n",
       "max                         0.877580                 0.122973      0.000419   \n",
       "\n",
       "       Шаг нашивки  Плотность нашивки  \n",
       "count   922.000000         922.000000  \n",
       "mean      0.002101           0.017401  \n",
       "std       0.000808           0.003795  \n",
       "min       0.000011           0.007195  \n",
       "25%       0.001543           0.014860  \n",
       "50%       0.002053           0.017293  \n",
       "75%       0.002630           0.019756  \n",
       "max       0.004519           0.030927  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_norm.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2f3fde11",
   "metadata": {},
   "source": [
    "Проведем анализ главных компонент для поиска скрытых факторов влияющих на свойства композита и уменьшения размернности"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "5975b387",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.decomposition import PCA"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fbc4c53a",
   "metadata": {},
   "source": [
    "Определим вклад влияния 90% факторов"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "f2a53c1b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0.42540648 0.32178999 0.22781718]\n"
     ]
    }
   ],
   "source": [
    "pca = PCA(n_components=.9)\n",
    "pca.fit(df_norm)\n",
    "print(pca.explained_variance_ratio_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "0416efab",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 4.84367204e-04  3.02048208e-01  7.21895160e-01  2.27203790e-02\n",
      "   3.10187674e-03  4.50195157e-02  2.55292941e-01  1.04133686e-02\n",
      "  -5.64667932e-01  2.93726309e-02  3.04688958e-05  1.35747396e-03\n",
      "   9.16713857e-03]\n",
      " [ 4.00171854e-04  3.68612737e-01 -6.11768792e-01  1.95979993e-02\n",
      "   3.72199613e-03  4.80872740e-02  6.32869202e-01  1.22704236e-02\n",
      "  -2.92085162e-01  3.33968596e-02  1.44976086e-04  1.57940929e-03\n",
      "   6.89334054e-03]\n",
      " [ 6.84322458e-04  5.80063018e-01 -2.33749469e-01  2.77061077e-02\n",
      "   6.20794030e-03  7.91105720e-02 -7.12675465e-01  1.96960763e-02\n",
      "  -2.99592763e-01  5.92095160e-02  7.03356075e-05  1.81063816e-03\n",
      "   1.62429801e-02]]\n"
     ]
    }
   ],
   "source": [
    "print (pca.components_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "371f9f72",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "FactorAnalysis(n_components=3)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.decomposition import FactorAnalysis\n",
    "\n",
    "fa = FactorAnalysis(n_components=3)\n",
    "fa.fit(df_norm)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "963f5d6a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Соотношение матрица-наполнитель</th>\n",
       "      <th>Плотность, кг/м3</th>\n",
       "      <th>модуль упругости, ГПа</th>\n",
       "      <th>Количество отвердителя, м.%</th>\n",
       "      <th>Содержание эпоксидных групп,%_2</th>\n",
       "      <th>Температура вспышки, С_2</th>\n",
       "      <th>Поверхностная плотность, г/м2</th>\n",
       "      <th>Модуль упругости при растяжении, ГПа</th>\n",
       "      <th>Прочность при растяжении, МПа</th>\n",
       "      <th>Потребление смолы, г/м2</th>\n",
       "      <th>Угол нашивки</th>\n",
       "      <th>Шаг нашивки</th>\n",
       "      <th>Плотность нашивки</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.000080</td>\n",
       "      <td>0.059732</td>\n",
       "      <td>0.024070</td>\n",
       "      <td>0.003601</td>\n",
       "      <td>0.000627</td>\n",
       "      <td>0.008323</td>\n",
       "      <td>0.019640</td>\n",
       "      <td>0.002046</td>\n",
       "      <td>-0.067529</td>\n",
       "      <td>0.005690</td>\n",
       "      <td>0.000011</td>\n",
       "      <td>0.000240</td>\n",
       "      <td>0.001600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-0.000016</td>\n",
       "      <td>-0.021691</td>\n",
       "      <td>0.086033</td>\n",
       "      <td>-0.000557</td>\n",
       "      <td>-0.000241</td>\n",
       "      <td>-0.002448</td>\n",
       "      <td>0.014350</td>\n",
       "      <td>-0.000742</td>\n",
       "      <td>-0.012269</td>\n",
       "      <td>-0.001869</td>\n",
       "      <td>-0.000009</td>\n",
       "      <td>-0.000059</td>\n",
       "      <td>-0.000435</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-0.000012</td>\n",
       "      <td>-0.006638</td>\n",
       "      <td>-0.025773</td>\n",
       "      <td>-0.000163</td>\n",
       "      <td>-0.000097</td>\n",
       "      <td>-0.000916</td>\n",
       "      <td>0.074331</td>\n",
       "      <td>-0.000269</td>\n",
       "      <td>-0.004664</td>\n",
       "      <td>-0.000759</td>\n",
       "      <td>0.000005</td>\n",
       "      <td>0.000012</td>\n",
       "      <td>-0.000467</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Соотношение матрица-наполнитель  Плотность, кг/м3  модуль упругости, ГПа  \\\n",
       "0                         0.000080          0.059732               0.024070   \n",
       "1                        -0.000016         -0.021691               0.086033   \n",
       "2                        -0.000012         -0.006638              -0.025773   \n",
       "\n",
       "   Количество отвердителя, м.%  Содержание эпоксидных групп,%_2  \\\n",
       "0                     0.003601                         0.000627   \n",
       "1                    -0.000557                        -0.000241   \n",
       "2                    -0.000163                        -0.000097   \n",
       "\n",
       "   Температура вспышки, С_2  Поверхностная плотность, г/м2  \\\n",
       "0                  0.008323                       0.019640   \n",
       "1                 -0.002448                       0.014350   \n",
       "2                 -0.000916                       0.074331   \n",
       "\n",
       "   Модуль упругости при растяжении, ГПа  Прочность при растяжении, МПа  \\\n",
       "0                              0.002046                      -0.067529   \n",
       "1                             -0.000742                      -0.012269   \n",
       "2                             -0.000269                      -0.004664   \n",
       "\n",
       "   Потребление смолы, г/м2  Угол нашивки  Шаг нашивки  Плотность нашивки  \n",
       "0                 0.005690      0.000011     0.000240           0.001600  \n",
       "1                -0.001869     -0.000009    -0.000059          -0.000435  \n",
       "2                -0.000759      0.000005     0.000012          -0.000467  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.DataFrame(fa.components_, columns=df_norm.columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "b74a7431",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Соотношение матрица-наполнитель</th>\n",
       "      <th>Плотность, кг/м3</th>\n",
       "      <th>модуль упругости, ГПа</th>\n",
       "      <th>Количество отвердителя, м.%</th>\n",
       "      <th>Содержание эпоксидных групп,%_2</th>\n",
       "      <th>Температура вспышки, С_2</th>\n",
       "      <th>Поверхностная плотность, г/м2</th>\n",
       "      <th>Модуль упругости при растяжении, ГПа</th>\n",
       "      <th>Прочность при растяжении, МПа</th>\n",
       "      <th>Потребление смолы, г/м2</th>\n",
       "      <th>Угол нашивки</th>\n",
       "      <th>Шаг нашивки</th>\n",
       "      <th>Плотность нашивки</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.000081</td>\n",
       "      <td>0.061055</td>\n",
       "      <td>0.019714</td>\n",
       "      <td>0.003621</td>\n",
       "      <td>0.000640</td>\n",
       "      <td>0.008442</td>\n",
       "      <td>0.017753</td>\n",
       "      <td>0.002092</td>\n",
       "      <td>-0.066683</td>\n",
       "      <td>0.005774</td>\n",
       "      <td>0.000011</td>\n",
       "      <td>0.000242</td>\n",
       "      <td>0.001629</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-0.000012</td>\n",
       "      <td>-0.018820</td>\n",
       "      <td>0.085999</td>\n",
       "      <td>-0.000349</td>\n",
       "      <td>-0.000210</td>\n",
       "      <td>-0.001986</td>\n",
       "      <td>0.018942</td>\n",
       "      <td>-0.000645</td>\n",
       "      <td>-0.016328</td>\n",
       "      <td>-0.001539</td>\n",
       "      <td>-0.000008</td>\n",
       "      <td>-0.000043</td>\n",
       "      <td>-0.000368</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-0.000010</td>\n",
       "      <td>-0.004975</td>\n",
       "      <td>-0.029934</td>\n",
       "      <td>-0.000080</td>\n",
       "      <td>-0.000076</td>\n",
       "      <td>-0.000669</td>\n",
       "      <td>0.074418</td>\n",
       "      <td>-0.000212</td>\n",
       "      <td>-0.004958</td>\n",
       "      <td>-0.000567</td>\n",
       "      <td>0.000005</td>\n",
       "      <td>0.000018</td>\n",
       "      <td>-0.000422</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.000022</td>\n",
       "      <td>-0.001381</td>\n",
       "      <td>0.001267</td>\n",
       "      <td>0.001211</td>\n",
       "      <td>0.000238</td>\n",
       "      <td>0.003172</td>\n",
       "      <td>0.002193</td>\n",
       "      <td>0.000679</td>\n",
       "      <td>0.000475</td>\n",
       "      <td>0.003049</td>\n",
       "      <td>0.000022</td>\n",
       "      <td>0.000121</td>\n",
       "      <td>0.000264</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.000005</td>\n",
       "      <td>-0.001436</td>\n",
       "      <td>-0.005282</td>\n",
       "      <td>0.000626</td>\n",
       "      <td>-0.000030</td>\n",
       "      <td>0.002880</td>\n",
       "      <td>-0.007256</td>\n",
       "      <td>-0.000102</td>\n",
       "      <td>-0.001684</td>\n",
       "      <td>0.003140</td>\n",
       "      <td>-0.000015</td>\n",
       "      <td>0.000058</td>\n",
       "      <td>-0.000441</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Соотношение матрица-наполнитель  Плотность, кг/м3  модуль упругости, ГПа  \\\n",
       "0                         0.000081          0.061055               0.019714   \n",
       "1                        -0.000012         -0.018820               0.085999   \n",
       "2                        -0.000010         -0.004975              -0.029934   \n",
       "3                         0.000022         -0.001381               0.001267   \n",
       "4                         0.000005         -0.001436              -0.005282   \n",
       "\n",
       "   Количество отвердителя, м.%  Содержание эпоксидных групп,%_2  \\\n",
       "0                     0.003621                         0.000640   \n",
       "1                    -0.000349                        -0.000210   \n",
       "2                    -0.000080                        -0.000076   \n",
       "3                     0.001211                         0.000238   \n",
       "4                     0.000626                        -0.000030   \n",
       "\n",
       "   Температура вспышки, С_2  Поверхностная плотность, г/м2  \\\n",
       "0                  0.008442                       0.017753   \n",
       "1                 -0.001986                       0.018942   \n",
       "2                 -0.000669                       0.074418   \n",
       "3                  0.003172                       0.002193   \n",
       "4                  0.002880                      -0.007256   \n",
       "\n",
       "   Модуль упругости при растяжении, ГПа  Прочность при растяжении, МПа  \\\n",
       "0                              0.002092                      -0.066683   \n",
       "1                             -0.000645                      -0.016328   \n",
       "2                             -0.000212                      -0.004958   \n",
       "3                              0.000679                       0.000475   \n",
       "4                             -0.000102                      -0.001684   \n",
       "\n",
       "   Потребление смолы, г/м2  Угол нашивки  Шаг нашивки  Плотность нашивки  \n",
       "0                 0.005774      0.000011     0.000242           0.001629  \n",
       "1                -0.001539     -0.000008    -0.000043          -0.000368  \n",
       "2                -0.000567      0.000005     0.000018          -0.000422  \n",
       "3                 0.003049      0.000022     0.000121           0.000264  \n",
       "4                 0.003140     -0.000015     0.000058          -0.000441  "
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fa = FactorAnalysis(n_components=5)\n",
    "fa.fit(df_norm)\n",
    "pd.DataFrame(fa.components_, columns=df_norm.columns)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "69524dad",
   "metadata": {},
   "source": [
    "На нормализованных данных метод PCA показал ,что взаимосвязи между данными не прослеживается,так как все значения близки к нулю"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "fd4bbc9e",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import StandardScaler\n",
    "std = StandardScaler()\n",
    "df_std = pd.DataFrame(std.fit_transform(df), columns=df.columns, index=df.index)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "47c37a7e",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Соотношение матрица-наполнитель</th>\n",
       "      <th>Плотность, кг/м3</th>\n",
       "      <th>модуль упругости, ГПа</th>\n",
       "      <th>Количество отвердителя, м.%</th>\n",
       "      <th>Содержание эпоксидных групп,%_2</th>\n",
       "      <th>Температура вспышки, С_2</th>\n",
       "      <th>Поверхностная плотность, г/м2</th>\n",
       "      <th>Модуль упругости при растяжении, ГПа</th>\n",
       "      <th>Прочность при растяжении, МПа</th>\n",
       "      <th>Потребление смолы, г/м2</th>\n",
       "      <th>Угол нашивки</th>\n",
       "      <th>Шаг нашивки</th>\n",
       "      <th>Плотность нашивки</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-1.196467</td>\n",
       "      <td>0.787037</td>\n",
       "      <td>0.007992</td>\n",
       "      <td>-2.286425</td>\n",
       "      <td>0.647585</td>\n",
       "      <td>-0.039740</td>\n",
       "      <td>-0.971971</td>\n",
       "      <td>-1.092335</td>\n",
       "      <td>1.187925</td>\n",
       "      <td>0.034181</td>\n",
       "      <td>-1.021932</td>\n",
       "      <td>-1.166792</td>\n",
       "      <td>0.219240</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-1.196467</td>\n",
       "      <td>0.787037</td>\n",
       "      <td>0.007992</td>\n",
       "      <td>0.668092</td>\n",
       "      <td>-0.397291</td>\n",
       "      <td>0.350738</td>\n",
       "      <td>-0.971971</td>\n",
       "      <td>-1.092335</td>\n",
       "      <td>1.187925</td>\n",
       "      <td>0.034181</td>\n",
       "      <td>-1.021932</td>\n",
       "      <td>-0.768833</td>\n",
       "      <td>-0.950227</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-0.175012</td>\n",
       "      <td>0.787037</td>\n",
       "      <td>0.051553</td>\n",
       "      <td>0.027074</td>\n",
       "      <td>0.028123</td>\n",
       "      <td>-0.039740</td>\n",
       "      <td>-0.971971</td>\n",
       "      <td>-1.092335</td>\n",
       "      <td>1.187925</td>\n",
       "      <td>0.034181</td>\n",
       "      <td>-1.021932</td>\n",
       "      <td>-0.768833</td>\n",
       "      <td>-0.050637</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-0.178825</td>\n",
       "      <td>0.364514</td>\n",
       "      <td>0.036283</td>\n",
       "      <td>0.027074</td>\n",
       "      <td>0.028123</td>\n",
       "      <td>-0.039740</td>\n",
       "      <td>-0.971971</td>\n",
       "      <td>-1.092335</td>\n",
       "      <td>1.187925</td>\n",
       "      <td>0.034181</td>\n",
       "      <td>-1.021932</td>\n",
       "      <td>-0.768833</td>\n",
       "      <td>0.219240</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-0.400390</td>\n",
       "      <td>-0.903054</td>\n",
       "      <td>0.216474</td>\n",
       "      <td>0.027074</td>\n",
       "      <td>0.028123</td>\n",
       "      <td>-0.039740</td>\n",
       "      <td>-0.971971</td>\n",
       "      <td>-1.092335</td>\n",
       "      <td>1.187925</td>\n",
       "      <td>0.034181</td>\n",
       "      <td>-1.021932</td>\n",
       "      <td>-0.768833</td>\n",
       "      <td>1.118831</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>917</th>\n",
       "      <td>-0.733662</td>\n",
       "      <td>-0.310284</td>\n",
       "      <td>0.539767</td>\n",
       "      <td>-0.902956</td>\n",
       "      <td>-0.868217</td>\n",
       "      <td>0.979545</td>\n",
       "      <td>-0.974830</td>\n",
       "      <td>-0.070267</td>\n",
       "      <td>-0.163679</td>\n",
       "      <td>-1.629244</td>\n",
       "      <td>0.978538</td>\n",
       "      <td>0.853400</td>\n",
       "      <td>-0.948449</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>918</th>\n",
       "      <td>0.576611</td>\n",
       "      <td>1.069974</td>\n",
       "      <td>-0.889924</td>\n",
       "      <td>1.303201</td>\n",
       "      <td>-1.087006</td>\n",
       "      <td>-0.811326</td>\n",
       "      <td>-0.470122</td>\n",
       "      <td>-0.126524</td>\n",
       "      <td>-0.223019</td>\n",
       "      <td>-1.756683</td>\n",
       "      <td>0.978538</td>\n",
       "      <td>1.446055</td>\n",
       "      <td>-0.342933</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>919</th>\n",
       "      <td>0.394018</td>\n",
       "      <td>-0.024589</td>\n",
       "      <td>-0.975122</td>\n",
       "      <td>-0.022536</td>\n",
       "      <td>0.734311</td>\n",
       "      <td>-0.958342</td>\n",
       "      <td>0.919470</td>\n",
       "      <td>0.473140</td>\n",
       "      <td>0.444312</td>\n",
       "      <td>0.324984</td>\n",
       "      <td>0.978538</td>\n",
       "      <td>-1.102660</td>\n",
       "      <td>0.905599</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>920</th>\n",
       "      <td>0.868603</td>\n",
       "      <td>1.305328</td>\n",
       "      <td>0.016356</td>\n",
       "      <td>1.131763</td>\n",
       "      <td>-1.234469</td>\n",
       "      <td>-0.263996</td>\n",
       "      <td>0.567419</td>\n",
       "      <td>0.244441</td>\n",
       "      <td>-0.859827</td>\n",
       "      <td>-0.366368</td>\n",
       "      <td>0.978538</td>\n",
       "      <td>-0.246233</td>\n",
       "      <td>0.062808</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>921</th>\n",
       "      <td>0.983318</td>\n",
       "      <td>-1.178912</td>\n",
       "      <td>-0.973657</td>\n",
       "      <td>0.674952</td>\n",
       "      <td>2.204352</td>\n",
       "      <td>0.374919</td>\n",
       "      <td>0.985849</td>\n",
       "      <td>0.332727</td>\n",
       "      <td>0.870993</td>\n",
       "      <td>-0.407900</td>\n",
       "      <td>0.978538</td>\n",
       "      <td>-0.339474</td>\n",
       "      <td>1.787628</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>922 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Соотношение матрица-наполнитель  Плотность, кг/м3  модуль упругости, ГПа  \\\n",
       "0                          -1.196467          0.787037               0.007992   \n",
       "1                          -1.196467          0.787037               0.007992   \n",
       "2                          -0.175012          0.787037               0.051553   \n",
       "3                          -0.178825          0.364514               0.036283   \n",
       "4                          -0.400390         -0.903054               0.216474   \n",
       "..                               ...               ...                    ...   \n",
       "917                        -0.733662         -0.310284               0.539767   \n",
       "918                         0.576611          1.069974              -0.889924   \n",
       "919                         0.394018         -0.024589              -0.975122   \n",
       "920                         0.868603          1.305328               0.016356   \n",
       "921                         0.983318         -1.178912              -0.973657   \n",
       "\n",
       "     Количество отвердителя, м.%  Содержание эпоксидных групп,%_2  \\\n",
       "0                      -2.286425                         0.647585   \n",
       "1                       0.668092                        -0.397291   \n",
       "2                       0.027074                         0.028123   \n",
       "3                       0.027074                         0.028123   \n",
       "4                       0.027074                         0.028123   \n",
       "..                           ...                              ...   \n",
       "917                    -0.902956                        -0.868217   \n",
       "918                     1.303201                        -1.087006   \n",
       "919                    -0.022536                         0.734311   \n",
       "920                     1.131763                        -1.234469   \n",
       "921                     0.674952                         2.204352   \n",
       "\n",
       "     Температура вспышки, С_2  Поверхностная плотность, г/м2  \\\n",
       "0                   -0.039740                      -0.971971   \n",
       "1                    0.350738                      -0.971971   \n",
       "2                   -0.039740                      -0.971971   \n",
       "3                   -0.039740                      -0.971971   \n",
       "4                   -0.039740                      -0.971971   \n",
       "..                        ...                            ...   \n",
       "917                  0.979545                      -0.974830   \n",
       "918                 -0.811326                      -0.470122   \n",
       "919                 -0.958342                       0.919470   \n",
       "920                 -0.263996                       0.567419   \n",
       "921                  0.374919                       0.985849   \n",
       "\n",
       "     Модуль упругости при растяжении, ГПа  Прочность при растяжении, МПа  \\\n",
       "0                               -1.092335                       1.187925   \n",
       "1                               -1.092335                       1.187925   \n",
       "2                               -1.092335                       1.187925   \n",
       "3                               -1.092335                       1.187925   \n",
       "4                               -1.092335                       1.187925   \n",
       "..                                    ...                            ...   \n",
       "917                             -0.070267                      -0.163679   \n",
       "918                             -0.126524                      -0.223019   \n",
       "919                              0.473140                       0.444312   \n",
       "920                              0.244441                      -0.859827   \n",
       "921                              0.332727                       0.870993   \n",
       "\n",
       "     Потребление смолы, г/м2  Угол нашивки  Шаг нашивки  Плотность нашивки  \n",
       "0                   0.034181     -1.021932    -1.166792           0.219240  \n",
       "1                   0.034181     -1.021932    -0.768833          -0.950227  \n",
       "2                   0.034181     -1.021932    -0.768833          -0.050637  \n",
       "3                   0.034181     -1.021932    -0.768833           0.219240  \n",
       "4                   0.034181     -1.021932    -0.768833           1.118831  \n",
       "..                       ...           ...          ...                ...  \n",
       "917                -1.629244      0.978538     0.853400          -0.948449  \n",
       "918                -1.756683      0.978538     1.446055          -0.342933  \n",
       "919                 0.324984      0.978538    -1.102660           0.905599  \n",
       "920                -0.366368      0.978538    -0.246233           0.062808  \n",
       "921                -0.407900      0.978538    -0.339474           1.787628  \n",
       "\n",
       "[922 rows x 13 columns]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_std"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "008c2b12",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0.08983977 0.0885371  0.08705908 0.08504702 0.08332951 0.07921151\n",
      " 0.07844194 0.07562599 0.07525462 0.06977193 0.0662617  0.06311949]\n"
     ]
    }
   ],
   "source": [
    "pca = PCA(n_components=.9)\n",
    "pca.fit(df_std)\n",
    "print(pca.explained_variance_ratio_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "7b85019a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Соотношение матрица-наполнитель</th>\n",
       "      <th>Плотность, кг/м3</th>\n",
       "      <th>модуль упругости, ГПа</th>\n",
       "      <th>Количество отвердителя, м.%</th>\n",
       "      <th>Содержание эпоксидных групп,%_2</th>\n",
       "      <th>Температура вспышки, С_2</th>\n",
       "      <th>Поверхностная плотность, г/м2</th>\n",
       "      <th>Модуль упругости при растяжении, ГПа</th>\n",
       "      <th>Прочность при растяжении, МПа</th>\n",
       "      <th>Потребление смолы, г/м2</th>\n",
       "      <th>Угол нашивки</th>\n",
       "      <th>Шаг нашивки</th>\n",
       "      <th>Плотность нашивки</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-0.050602</td>\n",
       "      <td>-0.543574</td>\n",
       "      <td>-0.041993</td>\n",
       "      <td>0.142200</td>\n",
       "      <td>0.022153</td>\n",
       "      <td>0.061252</td>\n",
       "      <td>-0.039607</td>\n",
       "      <td>-0.000835</td>\n",
       "      <td>0.070497</td>\n",
       "      <td>0.004706</td>\n",
       "      <td>0.062600</td>\n",
       "      <td>0.053427</td>\n",
       "      <td>-0.307305</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-0.038844</td>\n",
       "      <td>0.096479</td>\n",
       "      <td>-0.107654</td>\n",
       "      <td>-0.280748</td>\n",
       "      <td>-0.003566</td>\n",
       "      <td>-0.063351</td>\n",
       "      <td>-0.033402</td>\n",
       "      <td>-0.013293</td>\n",
       "      <td>-0.006760</td>\n",
       "      <td>-0.018636</td>\n",
       "      <td>-0.360686</td>\n",
       "      <td>-0.033720</td>\n",
       "      <td>-0.376277</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-0.018070</td>\n",
       "      <td>0.151589</td>\n",
       "      <td>0.023450</td>\n",
       "      <td>0.423754</td>\n",
       "      <td>-0.002596</td>\n",
       "      <td>0.106760</td>\n",
       "      <td>0.102971</td>\n",
       "      <td>-0.110775</td>\n",
       "      <td>-0.182497</td>\n",
       "      <td>-0.057207</td>\n",
       "      <td>-0.145191</td>\n",
       "      <td>-0.019570</td>\n",
       "      <td>-0.151583</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-0.158007</td>\n",
       "      <td>0.115011</td>\n",
       "      <td>-0.191239</td>\n",
       "      <td>-0.048494</td>\n",
       "      <td>0.070145</td>\n",
       "      <td>-0.033380</td>\n",
       "      <td>0.164745</td>\n",
       "      <td>0.059192</td>\n",
       "      <td>-0.086086</td>\n",
       "      <td>-0.078197</td>\n",
       "      <td>0.315567</td>\n",
       "      <td>0.006529</td>\n",
       "      <td>-0.171951</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.177476</td>\n",
       "      <td>0.027715</td>\n",
       "      <td>0.068992</td>\n",
       "      <td>-0.024156</td>\n",
       "      <td>0.082828</td>\n",
       "      <td>0.126675</td>\n",
       "      <td>0.117883</td>\n",
       "      <td>0.139024</td>\n",
       "      <td>-0.035278</td>\n",
       "      <td>0.255343</td>\n",
       "      <td>0.019895</td>\n",
       "      <td>0.117685</td>\n",
       "      <td>-0.065869</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Соотношение матрица-наполнитель  Плотность, кг/м3  модуль упругости, ГПа  \\\n",
       "0                        -0.050602         -0.543574              -0.041993   \n",
       "1                        -0.038844          0.096479              -0.107654   \n",
       "2                        -0.018070          0.151589               0.023450   \n",
       "3                        -0.158007          0.115011              -0.191239   \n",
       "4                         0.177476          0.027715               0.068992   \n",
       "\n",
       "   Количество отвердителя, м.%  Содержание эпоксидных групп,%_2  \\\n",
       "0                     0.142200                         0.022153   \n",
       "1                    -0.280748                        -0.003566   \n",
       "2                     0.423754                        -0.002596   \n",
       "3                    -0.048494                         0.070145   \n",
       "4                    -0.024156                         0.082828   \n",
       "\n",
       "   Температура вспышки, С_2  Поверхностная плотность, г/м2  \\\n",
       "0                  0.061252                      -0.039607   \n",
       "1                 -0.063351                      -0.033402   \n",
       "2                  0.106760                       0.102971   \n",
       "3                 -0.033380                       0.164745   \n",
       "4                  0.126675                       0.117883   \n",
       "\n",
       "   Модуль упругости при растяжении, ГПа  Прочность при растяжении, МПа  \\\n",
       "0                             -0.000835                       0.070497   \n",
       "1                             -0.013293                      -0.006760   \n",
       "2                             -0.110775                      -0.182497   \n",
       "3                              0.059192                      -0.086086   \n",
       "4                              0.139024                      -0.035278   \n",
       "\n",
       "   Потребление смолы, г/м2  Угол нашивки  Шаг нашивки  Плотность нашивки  \n",
       "0                 0.004706      0.062600     0.053427          -0.307305  \n",
       "1                -0.018636     -0.360686    -0.033720          -0.376277  \n",
       "2                -0.057207     -0.145191    -0.019570          -0.151583  \n",
       "3                -0.078197      0.315567     0.006529          -0.171951  \n",
       "4                 0.255343      0.019895     0.117685          -0.065869  "
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fa = FactorAnalysis(n_components=5)\n",
    "fa.fit(df_std)\n",
    "pd.DataFrame(fa.components_, columns=df_std.columns)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "510d4331",
   "metadata": {},
   "source": [
    "Аналогичная ситуация зависимость между признаками не прослеживается"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "476b22dc",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "62fded2b",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "8cab04b6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Соотношение матрица-наполнитель', 'Плотность, кг/м3',\n",
       "       'модуль упругости, ГПа', 'Количество отвердителя, м.%',\n",
       "       'Содержание эпоксидных групп,%_2', 'Температура вспышки, С_2',\n",
       "       'Поверхностная плотность, г/м2', 'Модуль упругости при растяжении, ГПа',\n",
       "       'Прочность при растяжении, МПа', 'Потребление смолы, г/м2',\n",
       "       'Угол нашивки', 'Шаг нашивки', 'Плотность нашивки'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_norm.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "20c0dd38",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "8921d9db",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = df_norm.drop('Модуль упругости при растяжении, ГПа', axis=1)\n",
    "y = df_norm['Модуль упругости при растяжении, ГПа']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "92c20d3c",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "391edf3d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Размер обучающей выборки: 645\n",
      "Размер тестовой выборки: 277\n"
     ]
    }
   ],
   "source": [
    "print(f'Размер обучающей выборки: {X_train.shape[0]}')\n",
    "print(f'Размер тестовой выборки: {X_test.shape[0]}')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c657ee51",
   "metadata": {},
   "source": [
    "# Модель для прогноза модуля упругости при растяжении"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "97e798f3",
   "metadata": {},
   "source": [
    "Линейная регрессия"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "545e48b1",
   "metadata": {},
   "outputs": [],
   "source": [
    "model_LN_1 = LinearRegression()\n",
    "model_LN_1.fit(X_train, y_train)\n",
    "y_pred = model_LN_1.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "e72cfff1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "mean_absolute_error = (predicted, y_test)\n",
      "r2_score = (predicted, y_test)\n"
     ]
    }
   ],
   "source": [
    "predicted = model_LN_1.predict(X_test)\n",
    "mean_absolute_error(predicted, y_test), \n",
    "r2_score(predicted, y_test)\n",
    "print('mean_absolute_error = (predicted, y_test)')\n",
    "print('r2_score = (predicted, y_test)')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ca58dee0",
   "metadata": {},
   "source": [
    "Случайный лес"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "1c250c4d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'max_depth': 6, 'max_features': 'auto', 'n_estimators': 60}"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "random_forest_tuning = RandomForestRegressor(random_state = 42)\n",
    "param_grid = {\n",
    "   'n_estimators': [20, 40, 60],\n",
    "   'max_features': ['auto', 'sqrt', 'log2'],\n",
    "   'max_depth' : [3,4,5,6]\n",
    "}\n",
    "GSCV = GridSearchCV(estimator=random_forest_tuning, param_grid=param_grid, cv=10, verbose=0)\n",
    "GSCV.fit(X_train, y_train)\n",
    "GSCV.best_params_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "baf03240",
   "metadata": {},
   "outputs": [],
   "source": [
    "model_RFR_1 = GSCV.best_estimator_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "aa78c920",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestRegressor(max_depth=6, n_estimators=60, random_state=42)"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_RFR_1.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "c2e72e21",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.02422954, 0.0210775 , 0.02059128, 0.02219136, 0.02862304,\n",
       "       0.02705979, 0.02026287, 0.02116557, 0.02227504, 0.0188784 ,\n",
       "       0.02199148, 0.02418098, 0.02043044, 0.01779905, 0.02135326,\n",
       "       0.02354035, 0.02186791, 0.0246812 , 0.02352787, 0.02130052,\n",
       "       0.02044307, 0.02121433, 0.02057592, 0.02269701, 0.01814897,\n",
       "       0.02465178, 0.02594209, 0.0198727 , 0.02050859, 0.02647995,\n",
       "       0.02501728, 0.02225975, 0.02438433, 0.02205879, 0.02149727,\n",
       "       0.02089462, 0.01952059, 0.02368953, 0.02475668, 0.02007324,\n",
       "       0.02130297, 0.02202269, 0.02438068, 0.01868891, 0.0212612 ,\n",
       "       0.02184262, 0.02109998, 0.01951376, 0.02297215, 0.02161278,\n",
       "       0.02180644, 0.02250587, 0.02637087, 0.02818963, 0.02171574,\n",
       "       0.0264955 , 0.01900892, 0.01968876, 0.02595361, 0.01767131,\n",
       "       0.02112751, 0.02473355, 0.02408827, 0.0193014 , 0.02542431,\n",
       "       0.02131309, 0.01767837, 0.01783616, 0.0237381 , 0.01887965,\n",
       "       0.02230573, 0.02342883, 0.02389088, 0.02149278, 0.01971918,\n",
       "       0.02135811, 0.01993747, 0.02040687, 0.01933963, 0.02238638,\n",
       "       0.02506579, 0.02187874, 0.02207752, 0.02105259, 0.01886945,\n",
       "       0.02406425, 0.02401691, 0.02359078, 0.02373028, 0.02377708,\n",
       "       0.02805806, 0.02118377, 0.01991821, 0.0223173 , 0.02460358,\n",
       "       0.01960164, 0.01959996, 0.02674965, 0.02337868, 0.02153917,\n",
       "       0.02094092, 0.02587377, 0.02097435, 0.02215643, 0.02265328,\n",
       "       0.02412684, 0.02517615, 0.02241775, 0.01982845, 0.02367497,\n",
       "       0.01958799, 0.02199861, 0.02243849, 0.02497359, 0.02193995,\n",
       "       0.02032343, 0.02028853, 0.01963797, 0.01949598, 0.02126047,\n",
       "       0.01955578, 0.02702121, 0.02522357, 0.02056736, 0.02390053,\n",
       "       0.01913123, 0.02117451, 0.02704563, 0.02075806, 0.02436335,\n",
       "       0.02404269, 0.01776539, 0.02188744, 0.02385804, 0.02291629,\n",
       "       0.02208419, 0.02205212, 0.02079284, 0.02398737, 0.02333884,\n",
       "       0.02047261, 0.0195589 , 0.02226079, 0.02462977, 0.02163431,\n",
       "       0.02211957, 0.02655666, 0.02139188, 0.02195022, 0.02450191,\n",
       "       0.02083341, 0.02877951, 0.01755398, 0.01953625, 0.02121869,\n",
       "       0.0203234 , 0.0247809 , 0.01788102, 0.02232768, 0.02638726,\n",
       "       0.0243992 , 0.02073638, 0.02233999, 0.02538255, 0.02811848,\n",
       "       0.01969542, 0.02205249, 0.01992995, 0.02230103, 0.0212734 ,\n",
       "       0.0203442 , 0.02344598, 0.02242846, 0.01939107, 0.0259467 ,\n",
       "       0.0249204 , 0.02286024, 0.02375897, 0.0223833 , 0.02246666,\n",
       "       0.01763536, 0.02120536, 0.02300438, 0.02238079, 0.02247039,\n",
       "       0.02129423, 0.02103426, 0.02145107, 0.02138151, 0.02133184,\n",
       "       0.02174502, 0.02263596, 0.02066188, 0.02357314, 0.01960381,\n",
       "       0.02180316, 0.0208343 , 0.01809159, 0.02243516, 0.02161642,\n",
       "       0.02401594, 0.02011785, 0.01790604, 0.02051739, 0.01959371,\n",
       "       0.02136529, 0.02417328, 0.02262433, 0.02093628, 0.02106422,\n",
       "       0.0252825 , 0.02108886, 0.02082018, 0.02227074, 0.02305485,\n",
       "       0.02423968, 0.02139757, 0.02238456, 0.02239722, 0.0248951 ,\n",
       "       0.02039282, 0.02363319, 0.01952307, 0.02507111, 0.01931822,\n",
       "       0.02774116, 0.02371949, 0.02249194, 0.02323447, 0.02501763,\n",
       "       0.02237985, 0.01962588, 0.02197233, 0.02733789, 0.02026967,\n",
       "       0.0237756 , 0.02121457, 0.02204585, 0.01962204, 0.0204599 ,\n",
       "       0.0220357 , 0.02623041, 0.02743577, 0.01955133, 0.02231598,\n",
       "       0.02168569, 0.02172448, 0.0195697 , 0.0221486 , 0.02383496,\n",
       "       0.01754443, 0.02217018, 0.02052901, 0.02070885, 0.01774616,\n",
       "       0.02140085, 0.02346277, 0.02350043, 0.02079759, 0.02369522,\n",
       "       0.02143056, 0.01954786, 0.02479951, 0.0212542 , 0.02182504,\n",
       "       0.02124725, 0.0213358 , 0.02133759, 0.02117615, 0.02003372,\n",
       "       0.02141461, 0.01982094, 0.01752206, 0.02489092, 0.02124581,\n",
       "       0.02018593, 0.02207278])"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_RFR_1.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "d0af3d23",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "319    0.023688\n",
       "377    0.022249\n",
       "538    0.019253\n",
       "296    0.022232\n",
       "531    0.030620\n",
       "         ...   \n",
       "420    0.017523\n",
       "133    0.023424\n",
       "490    0.021795\n",
       "558    0.019582\n",
       "363    0.022457\n",
       "Name: Модуль упругости при растяжении, ГПа, Length: 277, dtype: float64"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "1ed29003",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.0009557065800411968"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.mean(np.abs(y_test-model_RFR_1.predict(X_test)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "5c4f189f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.001977697997450857"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.mean(np.abs(y_test-np.mean(y_test)))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2e9d41c5",
   "metadata": {},
   "source": [
    "Деревья решений "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "f089c38b",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.tree import DecisionTreeRegressor"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "e0c2d345",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'criterion': 'poisson',\n",
       " 'max_depth': 4,\n",
       " 'max_features': 'auto',\n",
       " 'min_samples_leaf': 100,\n",
       " 'min_samples_split': 200,\n",
       " 'splitter': 'best'}"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DecisionTree_tuning = DecisionTreeRegressor(random_state = 42)\n",
    "param_grid = {\n",
    "   'criterion' : ['squared_error','friedman_mse','absolute_error', 'poisson'],\n",
    "   'max_features': ['auto', 'sqrt', 'log2'],\n",
    "   'max_depth' : [3,4,5,6],\n",
    "   'min_samples_leaf' : [100,150,200],\n",
    "   'min_samples_split' : [200,250,300],\n",
    "   'splitter': ['best', 'random']\n",
    "}\n",
    "DT_1 = GridSearchCV(estimator=DecisionTree_tuning, param_grid=param_grid, cv=10, verbose=0)\n",
    "DT_1.fit(X_train, y_train)\n",
    "DT_1.best_params_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "bb163f90",
   "metadata": {},
   "outputs": [],
   "source": [
    "model_DT_1 = GSCV.best_estimator_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "41867f58",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestRegressor(max_depth=6, n_estimators=60, random_state=42)"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_DT_1.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "2e859761",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.02422954, 0.0210775 , 0.02059128, 0.02219136, 0.02862304,\n",
       "       0.02705979, 0.02026287, 0.02116557, 0.02227504, 0.0188784 ,\n",
       "       0.02199148, 0.02418098, 0.02043044, 0.01779905, 0.02135326,\n",
       "       0.02354035, 0.02186791, 0.0246812 , 0.02352787, 0.02130052,\n",
       "       0.02044307, 0.02121433, 0.02057592, 0.02269701, 0.01814897,\n",
       "       0.02465178, 0.02594209, 0.0198727 , 0.02050859, 0.02647995,\n",
       "       0.02501728, 0.02225975, 0.02438433, 0.02205879, 0.02149727,\n",
       "       0.02089462, 0.01952059, 0.02368953, 0.02475668, 0.02007324,\n",
       "       0.02130297, 0.02202269, 0.02438068, 0.01868891, 0.0212612 ,\n",
       "       0.02184262, 0.02109998, 0.01951376, 0.02297215, 0.02161278,\n",
       "       0.02180644, 0.02250587, 0.02637087, 0.02818963, 0.02171574,\n",
       "       0.0264955 , 0.01900892, 0.01968876, 0.02595361, 0.01767131,\n",
       "       0.02112751, 0.02473355, 0.02408827, 0.0193014 , 0.02542431,\n",
       "       0.02131309, 0.01767837, 0.01783616, 0.0237381 , 0.01887965,\n",
       "       0.02230573, 0.02342883, 0.02389088, 0.02149278, 0.01971918,\n",
       "       0.02135811, 0.01993747, 0.02040687, 0.01933963, 0.02238638,\n",
       "       0.02506579, 0.02187874, 0.02207752, 0.02105259, 0.01886945,\n",
       "       0.02406425, 0.02401691, 0.02359078, 0.02373028, 0.02377708,\n",
       "       0.02805806, 0.02118377, 0.01991821, 0.0223173 , 0.02460358,\n",
       "       0.01960164, 0.01959996, 0.02674965, 0.02337868, 0.02153917,\n",
       "       0.02094092, 0.02587377, 0.02097435, 0.02215643, 0.02265328,\n",
       "       0.02412684, 0.02517615, 0.02241775, 0.01982845, 0.02367497,\n",
       "       0.01958799, 0.02199861, 0.02243849, 0.02497359, 0.02193995,\n",
       "       0.02032343, 0.02028853, 0.01963797, 0.01949598, 0.02126047,\n",
       "       0.01955578, 0.02702121, 0.02522357, 0.02056736, 0.02390053,\n",
       "       0.01913123, 0.02117451, 0.02704563, 0.02075806, 0.02436335,\n",
       "       0.02404269, 0.01776539, 0.02188744, 0.02385804, 0.02291629,\n",
       "       0.02208419, 0.02205212, 0.02079284, 0.02398737, 0.02333884,\n",
       "       0.02047261, 0.0195589 , 0.02226079, 0.02462977, 0.02163431,\n",
       "       0.02211957, 0.02655666, 0.02139188, 0.02195022, 0.02450191,\n",
       "       0.02083341, 0.02877951, 0.01755398, 0.01953625, 0.02121869,\n",
       "       0.0203234 , 0.0247809 , 0.01788102, 0.02232768, 0.02638726,\n",
       "       0.0243992 , 0.02073638, 0.02233999, 0.02538255, 0.02811848,\n",
       "       0.01969542, 0.02205249, 0.01992995, 0.02230103, 0.0212734 ,\n",
       "       0.0203442 , 0.02344598, 0.02242846, 0.01939107, 0.0259467 ,\n",
       "       0.0249204 , 0.02286024, 0.02375897, 0.0223833 , 0.02246666,\n",
       "       0.01763536, 0.02120536, 0.02300438, 0.02238079, 0.02247039,\n",
       "       0.02129423, 0.02103426, 0.02145107, 0.02138151, 0.02133184,\n",
       "       0.02174502, 0.02263596, 0.02066188, 0.02357314, 0.01960381,\n",
       "       0.02180316, 0.0208343 , 0.01809159, 0.02243516, 0.02161642,\n",
       "       0.02401594, 0.02011785, 0.01790604, 0.02051739, 0.01959371,\n",
       "       0.02136529, 0.02417328, 0.02262433, 0.02093628, 0.02106422,\n",
       "       0.0252825 , 0.02108886, 0.02082018, 0.02227074, 0.02305485,\n",
       "       0.02423968, 0.02139757, 0.02238456, 0.02239722, 0.0248951 ,\n",
       "       0.02039282, 0.02363319, 0.01952307, 0.02507111, 0.01931822,\n",
       "       0.02774116, 0.02371949, 0.02249194, 0.02323447, 0.02501763,\n",
       "       0.02237985, 0.01962588, 0.02197233, 0.02733789, 0.02026967,\n",
       "       0.0237756 , 0.02121457, 0.02204585, 0.01962204, 0.0204599 ,\n",
       "       0.0220357 , 0.02623041, 0.02743577, 0.01955133, 0.02231598,\n",
       "       0.02168569, 0.02172448, 0.0195697 , 0.0221486 , 0.02383496,\n",
       "       0.01754443, 0.02217018, 0.02052901, 0.02070885, 0.01774616,\n",
       "       0.02140085, 0.02346277, 0.02350043, 0.02079759, 0.02369522,\n",
       "       0.02143056, 0.01954786, 0.02479951, 0.0212542 , 0.02182504,\n",
       "       0.02124725, 0.0213358 , 0.02133759, 0.02117615, 0.02003372,\n",
       "       0.02141461, 0.01982094, 0.01752206, 0.02489092, 0.02124581,\n",
       "       0.02018593, 0.02207278])"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_DT_1.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "fef40f1e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.0009557065800411968"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.mean(np.abs(y_test-model_DT_1.predict(X_test)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "07cc1bc7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.001977697997450857"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.mean(np.abs(y_test-np.mean(y_test)))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e764877b",
   "metadata": {},
   "source": [
    "KNeighbors"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "e0445364",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.neighbors import KNeighborsRegressor"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "90a7e2a6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'algorithm': 'brute', 'n_neighbors': 15, 'weights': 'distance'}"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "KNN_tuning = KNeighborsRegressor()\n",
    "param_grid  = {'n_neighbors' : range(1, 301, 2),\n",
    "'weights' : ['uniform', 'distance'],\n",
    "'algorithm' : ['auto', 'ball_tree', 'kd_tree', 'brute']\n",
    "}\n",
    "KNN_1 = GridSearchCV(estimator=KNN_tuning, param_grid=param_grid, cv=10, verbose=0)\n",
    "KNN_1.fit(X_train, y_train)\n",
    "KNN_1.best_params_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "2e4f9fe0",
   "metadata": {},
   "outputs": [],
   "source": [
    "model_KNN_1 = GSCV.best_estimator_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "a1e532fd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestRegressor(max_depth=6, n_estimators=60, random_state=42)"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_KNN_1.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "d791e7d1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.0009557065800411968"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.mean(np.abs(y_test-model_KNN_1.predict(X_test)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "03a8493b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.001977697997450857"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.mean(np.abs(y_test-np.mean(y_test)))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1102b072",
   "metadata": {},
   "source": [
    "Стохастический градиентный спуск"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "ebc80a99",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import  SGDRegressor"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c283e8fa",
   "metadata": {},
   "source": [
    "# Модель для прогноза прочности при растяжении"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "f7b0f881",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = df_norm.drop('Прочность при растяжении, МПа', axis=1)\n",
    "y = df_norm['Прочность при растяжении, МПа']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "8d8e8215",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "fdf8e35b",
   "metadata": {},
   "outputs": [],
   "source": [
    "model_LN_2 = LinearRegression()\n",
    "model_LN_2.fit(X_train, y_train)\n",
    "y_pred = model_LN_2.predict(X_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "80a8f387",
   "metadata": {},
   "source": [
    "Случайный лес"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "811f25aa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'max_depth': 6, 'max_features': 'auto', 'n_estimators': 60}"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "random_forest_tuning = RandomForestRegressor(random_state = 42)\n",
    "param_grid = {\n",
    "   'n_estimators': [20, 40, 60],\n",
    "   'max_features': ['auto', 'sqrt', 'log2'],\n",
    "   'max_depth' : [3,4,5,6]\n",
    "}\n",
    "GSCV = GridSearchCV(estimator=random_forest_tuning, param_grid=param_grid, cv=10, verbose=0)\n",
    "GSCV.fit(X_train, y_train)\n",
    "GSCV.best_params_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "42759852",
   "metadata": {},
   "outputs": [],
   "source": [
    "model_RFR_2 = GSCV.best_estimator_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "19892ab8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestRegressor(max_depth=6, n_estimators=60, random_state=42)"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_RFR_2.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "6664742c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.010759174096497631"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.mean(np.abs(y_test-model_RFR_2.predict(X_test)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "71f57f7b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.05701771954379221"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.mean(np.abs(y_test-np.mean(y_test)))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9c14af2f",
   "metadata": {},
   "source": [
    "Деревья решений "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "b6b8d350",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'criterion': 'squared_error',\n",
       " 'max_depth': 3,\n",
       " 'max_features': 'auto',\n",
       " 'min_samples_leaf': 100,\n",
       " 'min_samples_split': 200,\n",
       " 'splitter': 'best'}"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DecisionTree_tuning = DecisionTreeRegressor(random_state = 42)\n",
    "param_grid = {\n",
    "   'criterion' : ['squared_error','friedman_mse','absolute_error', 'poisson'],\n",
    "   'max_features': ['auto', 'sqrt', 'log2'],\n",
    "   'max_depth' : [3,4,5,6],\n",
    "   'min_samples_leaf' : [100,150,200],\n",
    "   'min_samples_split' : [200,250,300],\n",
    "   'splitter': ['best', 'random']\n",
    "}\n",
    "DT_2 = GridSearchCV(estimator=DecisionTree_tuning, param_grid=param_grid, cv=10, verbose=0)\n",
    "DT_2.fit(X_train, y_train)\n",
    "DT_2.best_params_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "57b23ca0",
   "metadata": {},
   "outputs": [],
   "source": [
    "model_DT_2 = DT_2.best_estimator_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "0a376a00",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestRegressor(max_depth=6, n_estimators=60, random_state=42)"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_RFR_2.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "46f32698",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.031021983603723442"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.mean(np.abs(y_test-model_DT_2.predict(X_test)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "12c1e21b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.05701771954379221"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.mean(np.abs(y_test-np.mean(y_test)))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bc162639",
   "metadata": {},
   "source": [
    "KNeighbors"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "0700208e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'algorithm': 'auto', 'n_neighbors': 5, 'weights': 'distance'}"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "KNN_tuning = KNeighborsRegressor()\n",
    "param_grid  = {'n_neighbors' : range(1, 301, 2),\n",
    "'weights' : ['uniform', 'distance'],\n",
    "'algorithm' : ['auto', 'ball_tree', 'kd_tree', 'brute']\n",
    "}\n",
    "KNN_2 = GridSearchCV(estimator=KNN_tuning, param_grid=param_grid, cv=10, verbose=0)\n",
    "KNN_2.fit(X_train, y_train)\n",
    "KNN_2.best_params_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "66cef7f7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "KNeighborsRegressor(weights='distance')"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_KNN_2 = KNN_2.best_estimator_\n",
    "model_KNN_2.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "cbf3c5c9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.010234475017259822"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.mean(np.abs(y_test-model_KNN_2.predict(X_test)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "ea8c6d61",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.05701771954379221"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.mean(np.abs(y_test-np.mean(y_test)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "aef6c9fc",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\55944\\anaconda\\lib\\site-packages\\sklearn\\base.py:493: FutureWarning: The feature names should match those that were passed during fit. Starting version 1.2, an error will be raised.\n",
      "Feature names unseen at fit time:\n",
      "- Модуль упругости при растяжении, ГПа\n",
      "Feature names seen at fit time, yet now missing:\n",
      "- Прочность при растяжении, МПа\n",
      "\n",
      "  warnings.warn(message, FutureWarning)\n",
      "C:\\Users\\55944\\anaconda\\lib\\site-packages\\sklearn\\base.py:493: FutureWarning: The feature names should match those that were passed during fit. Starting version 1.2, an error will be raised.\n",
      "Feature names unseen at fit time:\n",
      "- Модуль упругости при растяжении, ГПа\n",
      "Feature names seen at fit time, yet now missing:\n",
      "- Прочность при растяжении, МПа\n",
      "\n",
      "  warnings.warn(message, FutureWarning)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>наименование модели</th>\n",
       "      <th>mean_absolute_error</th>\n",
       "      <th>r2_score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Линейная регрессия_МУ</td>\n",
       "      <td>0.709495</td>\n",
       "      <td>-94469.419910</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Случайный лес_МУ</td>\n",
       "      <td>0.709369</td>\n",
       "      <td>-101264.774432</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Деревья решений_МУ</td>\n",
       "      <td>0.010759</td>\n",
       "      <td>0.939788</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>KNeighbors_МУ</td>\n",
       "      <td>0.010234</td>\n",
       "      <td>0.927899</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Линейная регрессия_ПР</td>\n",
       "      <td>0.010929</td>\n",
       "      <td>0.954081</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Случайный лес_ПР</td>\n",
       "      <td>0.010759</td>\n",
       "      <td>0.939788</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Деревья решений_ПР</td>\n",
       "      <td>0.031022</td>\n",
       "      <td>0.416448</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>KNeighbors_ПР</td>\n",
       "      <td>0.010234</td>\n",
       "      <td>0.927899</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     наименование модели  mean_absolute_error       r2_score\n",
       "0  Линейная регрессия_МУ             0.709495  -94469.419910\n",
       "1       Случайный лес_МУ             0.709369 -101264.774432\n",
       "2     Деревья решений_МУ             0.010759       0.939788\n",
       "3          KNeighbors_МУ             0.010234       0.927899\n",
       "4  Линейная регрессия_ПР             0.010929       0.954081\n",
       "5       Случайный лес_ПР             0.010759       0.939788\n",
       "6     Деревья решений_ПР             0.031022       0.416448\n",
       "7          KNeighbors_ПР             0.010234       0.927899"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def get_metrics(model):\n",
    "    predicted = model.predict(X_test)\n",
    "    return (\n",
    "            mean_absolute_error(predicted, y_test), \n",
    "            r2_score(predicted, y_test)\n",
    "           )\n",
    "                      \n",
    "models_res = [get_metrics(model_LN_1), get_metrics(model_RFR_1), get_metrics(model_DT_1),get_metrics(model_KNN_1),\n",
    "              get_metrics(model_LN_2), get_metrics(model_RFR_2), get_metrics(model_DT_2),get_metrics(model_KNN_2)]\n",
    "res_data = {'наименование модели': ['Линейная регрессия_МУ', 'Случайный лес_МУ','Деревья решений_МУ','KNeighbors_МУ',\n",
    "                                    'Линейная регрессия_ПР', 'Случайный лес_ПР','Деревья решений_ПР','KNeighbors_ПР'], \n",
    "            'mean_absolute_error'   : [model_res[0] for model_res in models_res], \n",
    "            'r2_score'  : [model_res[1] for model_res in models_res]\n",
    "       }\n",
    "pd.DataFrame(res_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c037fc02",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
